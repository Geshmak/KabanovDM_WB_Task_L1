package main

import "fmt"

// бинарный поиск, скорость O(logn) лучше перебора O(n):
// положим что массив отсортирован
// тогда смотрим центральный элемент и если искомое значение меньше или больше,
// то рекурсивно рассматриваем левый или правый подмассив соответственно; Иначе нашли искомое значение!
// остановимся когда длинна подмассива = 1, к этому моменту мы либо нашли то что надо либо такого элемента нет (верну 0, false)

func bsearch(m []int, x int) (int, bool) {
	i := 0
	j := len(m)
	for i != j {
		var k = (i + j) / 2
		if x == m[k] {
			return k, true
		}
		if x < m[k] {
			j = k
		} else {
			i = k + 1
		}
	}
	return 0, false
}

func main() {
	m := []int{1, 3, 5, 7, 9, 10, 11, 12, 14, 16, 17, 19, 20, 50, 200, 1344}
	res, ok := bsearch(m, 8)
	if ok {
		fmt.Println("Нашел. Индекс:", res)
	} else {
		fmt.Println("Не нашел")
	}
}
